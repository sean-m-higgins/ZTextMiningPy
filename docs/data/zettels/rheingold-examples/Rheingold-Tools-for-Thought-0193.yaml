title: 01.01.09-Rheingold-Tools-for-Thought-0193
note: |
  And that means making a computer do things its manufacturers never expected it to do.
  It also meant surviving what the other hackers could do to the results of all your work if you weren't clever enough to prevent them.
  There was a matter of intellectual style.
  Boldness and speed and raw power were as important as (critics of hackers would say more important than) elegance and efficiency when it came to "cutting code" (writing the detailed machine language or high-level language lists of instructions that make programs do what computer users want them to do.).
  One common comeback when an outsider asked what "hacker" meant was "somebody who makes furniture with an axe."
  Orthodox programming style was hardly de rigeur in this crowd.
  The challenge was to think of a clever way to do something that most normal computer experts would do some other way or not at all.
  The performance standards were idiosyncratic and subtle, but all-important.
  These people judged each other by criteria that the rest of the world didn't even understand, and the hackers didn't mind keeping it that way.
  They were other kinds of outcasts besides social outcasts, self-selected or otherwise.
tags:
- Core Text
- Computing History
- Rheingold 0193
cite:
  bibkey: Rheingold_ToolsThoughtHistory_2000
  page: PDF eBook

